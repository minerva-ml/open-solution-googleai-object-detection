project: YOUR_PROJECT_NAME

name: google AI object detection
tags: [solution-1]

metric:
  channel: 'MAP'
  goal: maximize

#Comment out if not in Cloud Environment
#pip-requirements-file: requirements.txt

exclude:
  - .git
  - .idea
  - .ipynb_checkpoints
  - output
  - imgs
  - neptune.log
  - offline_job.log
  - notebooks

parameters:
# Data Paths
  train_imgs_dir: ''
  test_imgs_dir: ''
  annotations_filepath: ''
  annotations_human_verification_filepath: ''
  bbox_hierarchy_filepath: ''
  valid_ids_filepath: ''
  experiment_dir:  ''

# Execution
  overwrite: 0
  num_workers: 4
  num_threads: 1000
  load_in_memory: 0
  pin_memory: 1
  default_valid_ids: 1
  loader_mode: resize
  stream_mode: 0
  training_subset_size: 100

# General parameters
  image_h: 256
  image_w: 256
  image_channels: 3

# U-Net parameters (multi-output)
  nr_unet_outputs: 1
  channels_per_output: 2
  n_filters: 16
  conv_kernel: 3
  pool_kernel: 3
  pool_stride: 2
  repeat_blocks: 4
  encoder_depth: 50
  num_classes: 500
  pretrained: 1

# Training schedule
  epochs_nr: 100
  batch_size_train: 20
  batch_size_inference: 20
  lr: 0.0005
  momentum: 0.9
  gamma: 1.0
  patience: 30
  lr_factor: 0.3
  lr_patience: 30
  w0: 50
  sigma: 10
  dice_smooth: 1
  dice_activation: 'softmax'
  validate_with_map: 1

# Regularization
  use_batch_norm: 1
  l2_reg_conv: 0.0001
  l2_reg_dense: 0.0
  dropout_conv: 0.1
  dropout_dense: 0.0

# Postprocessing
  threshold: 0.5
  erode_selem_size: 0
  dilate_selem_size: 2
  tta_aggregation_method: gmean
  nms__iou_threshold: 0.5

# Inference padding
  crop_image_h: 300
  crop_image_w: 300
  h_pad: 10
  w_pad: 10
  pad_method: 'replicate'

#Neptune monitor
  unet_outputs_to_plot: '["multichannel_map",]'

#Scoring model
  scoring_model: 'lgbm'
  scoring_model__num_training_examples: 10000
